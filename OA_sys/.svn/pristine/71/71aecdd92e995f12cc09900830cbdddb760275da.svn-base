package clt.com.cn.controller.workflow;

import java.io.File;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.activiti.engine.repository.Deployment;
import org.activiti.engine.repository.ProcessDefinition;
import org.apache.commons.fileupload.disk.DiskFileItem;
import org.apache.commons.io.FileUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.commons.CommonsMultipartFile;

import clt.com.cn.model.entity.Contract;
import clt.com.cn.service.IContractManageService;
import clt.com.cn.service.IWorkflowService;

/** 
 * @Package clt.com.cn.controller.workflow 
 * @Description:  工作流控制器
 * @author liuwu
 * @date 2015年10月21日 下午3:37:15 
 * @version V1.0 
 */
@Controller
@RequestMapping( "/workFlowController" )
public class WorkFlowController
{
	@Autowired
	IWorkflowService workflowService;
	
	@Autowired
	IContractManageService iContractManageService;
	
	@RequestMapping( "/deployHome" )
	public String createContract( HttpServletRequest request )
	{
		// 1:查询部署对象信息，对应表（act_re_deployment）
		List< Deployment > depList = workflowService.findDeploymentList();
		// 2:查询流程定义的信息，对应表（act_re_procdef）
		List< ProcessDefinition > pdList = workflowService.findProcessDefinitionList();
		// 放置到上下文对象中
		
		request.setAttribute( "depList" , depList );
		request.setAttribute( "pdList" , pdList );
		return "oa_workflow/deployHome";
	}
	
	/**
	 * 
	 * @Description:启动流程
	 * @param request
	 * @param response
	 * @param id
	 * @return 
	 *   String 返回值描述
	 * @author liuwu
	 * @create_date 2015年10月27日 下午3:17:53
	 */
	@RequestMapping( "/startProgress" )
	public String startProgress( HttpServletRequest request ,
	        HttpServletResponse response , String id )
	{
		int contractId = Integer.parseInt( id );
		Contract contract = iContractManageService.get( contractId );
		HttpSession session = request.getSession( true );
		String userno = ( String ) session.getAttribute( "uname" );
		workflowService.startProgress( contract , userno );
		return null;
		
	}
	
	/**
	 * 发布流程
	 * @return
	 */
	@RequestMapping( "/newdeploy" )
	public String newdeploy(HttpServletRequest request, MultipartFile file , String filename )
	{
		// 获取页面传递的值
		// 1：获取页面上传递的zip格式的文件，格式是File类型
		CommonsMultipartFile cf = ( CommonsMultipartFile ) file;
		DiskFileItem fi = ( DiskFileItem ) cf.getFileItem();
		File file1 = fi.getStoreLocation();
		// 文件名称
		// String filename = workflowBean.getFilename();
		// 完成部署
		workflowService.saveNewDeploye( file1 , filename );
		return "redirect:/workFlowController/deployHome";
	}
}
